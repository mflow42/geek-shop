-- MySQL Script generated by MySQL Workbench
-- Mon Sep 10 21:05:52 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema geek_shop
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema geek_shop
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `geek_shop` DEFAULT CHARACTER SET utf8 ;
USE `geek_shop` ;

-- -----------------------------------------------------
-- Table `geek_shop`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`user` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `last_access` TIMESTAMP NULL,
  `username` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`order_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`order_status` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`order_status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`order` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`order` (
  `id` INT(11) ZEROFILL NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NULL,
  `comment` TEXT NULL,
  `order_status_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_order_status1_idx` (`order_status_id` ASC),
  CONSTRAINT `fk_order_order_status1`
    FOREIGN KEY (`order_status_id`)
    REFERENCES `geek_shop`.`order_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`user_role` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`user_role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`shop_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`shop_category` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`shop_category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `status` TINYINT NOT NULL DEFAULT 0,
  `parent_id` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`shop_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`shop_product` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`shop_product` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `price` DECIMAL(9,2) NULL DEFAULT 0.0,
  `quantity` INT UNSIGNED NULL,
  `status` TINYINT NULL,
  `shop_category_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_shop_product_shop_category1_idx` (`shop_category_id` ASC),
  CONSTRAINT `fk_shop_product_shop_category1`
    FOREIGN KEY (`shop_category_id`)
    REFERENCES `geek_shop`.`shop_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`order_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`order_item` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`order_item` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `quantity` INT NOT NULL DEFAULT 1,
  `price` DECIMAL(9,2) NOT NULL DEFAULT 0.0,
  `shop_product_id` INT NOT NULL,
  `order_id` INT(11) ZEROFILL NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_item_shop_product1_idx` (`shop_product_id` ASC),
  INDEX `fk_order_item_order1_idx` (`order_id` ASC),
  CONSTRAINT `fk_order_item_shop_product1`
    FOREIGN KEY (`shop_product_id`)
    REFERENCES `geek_shop`.`shop_product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_item_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `geek_shop`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`page`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`page` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`page` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(40) NOT NULL,
  `description` VARCHAR(160) NULL,
  `keywords` VARCHAR(50) NULL,
  `content` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `geek_shop`.`user_has_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `geek_shop`.`user_has_role` ;

CREATE TABLE IF NOT EXISTS `geek_shop`.`user_has_role` (
  `user_id` INT NOT NULL,
  `user_role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `user_role_id`),
  INDEX `fk_user_has_user_role_user_role1_idx` (`user_role_id` ASC),
  INDEX `fk_user_has_user_role_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_user_role_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `geek_shop`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_user_role_user_role1`
    FOREIGN KEY (`user_role_id`)
    REFERENCES `geek_shop`.`user_role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
